//<auto-generated/>
import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { environment } from 'src/environments/environment';
import { XService, XRule } from 'material/Component/XComponent';
import { STXCoreAccessUsuariosUsuariosAtivosMDL } from './UsuariosAtivos.Model';
import { STXCoreAccessUsuariosUsuariosAtivosRLE } from './UsuariosAtivos.Service.Rule';

export namespace STXCoreAccessUsuariosUsuariosAtivosSVC
{

    @Injectable()
    export class UsuariosAtivosService extends XService
    {
        static CID = 'BD4A5722-A0F8-42BB-9BA0-264DFD0F525D';
        constructor(private http: HttpClient, public Rule: STXCoreAccessUsuariosUsuariosAtivosRLE.UsuariosAtivosRule)
        {
            super();
        }


        override DoSearch(pCallback: XMethod<XDataSet<XDataTuple>>)
        {
            let filter = new STXCoreAccessUsuariosUsuariosAtivosMDL.UsuariosAtivosFilter();
            this.Search(filter, pCallback);
        }

        Search(pFilter: STXCoreAccessUsuariosUsuariosAtivosMDL.UsuariosAtivosFilter, pCallback: XMethod<STXCoreAccessUsuariosUsuariosAtivosMDL.UsuariosAtivosDataSet>)
        {
            let ret = this.http.post(`${environment.apiBaseURI}/STXCoreAccess/Usuarios/UsuariosAtivos/search`, pFilter);
            ret.subscribe({
                next: (dst) =>
                {
                    let ndst = new STXCoreAccessUsuariosUsuariosAtivosMDL.UsuariosAtivosDataSet(<any>dst);
                    pCallback.apply(ndst, [ndst]);
                }
            });
        }

        GetByPK(pRequest: STXCoreAccessUsuariosUsuariosAtivosMDL.UsuariosAtivosRequest, pCallback: XMethod<STXCoreAccessUsuariosUsuariosAtivosMDL.UsuariosAtivosDataSet>)
        {
            var ret = this.http.post(`${environment.apiBaseURI}/STXCoreAccess/Usuarios/UsuariosAtivos/getbypk`, pRequest);
            ret.subscribe({
                next: (dst) =>
                {
                    let ndst = new STXCoreAccessUsuariosUsuariosAtivosMDL.UsuariosAtivosDataSet(<any>dst);
                    pCallback.apply(ndst, [ndst]);
                }
            });
        }

        Save(pDataSet: STXCoreAccessUsuariosUsuariosAtivosMDL.UsuariosAtivosDataSet, pCallback: XMethod<boolean>)
        {
            var ret = this.http.post(`${environment.apiBaseURI}/STXCoreAccess/Usuarios/UsuariosAtivos`, pDataSet);
            ret.subscribe({
                next: (isok) =>
                {
                    pCallback.apply(isok, [isok]);
                }
            });
        }
    }
}
