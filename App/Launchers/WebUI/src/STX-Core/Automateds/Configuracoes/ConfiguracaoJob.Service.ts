//<auto-generated/>
import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { environment } from 'src/environments/environment';
import { XService, XRule } from 'material/Component/XComponent';
import { STXCoreAutomatedsConfiguracoesConfiguracaoJobMDL } from './ConfiguracaoJob.Model';
import { STXCoreAutomatedsConfiguracoesConfiguracaoJobRLE } from './ConfiguracaoJob.Service.Rule';

export namespace STXCoreAutomatedsConfiguracoesConfiguracaoJobSVC
{

    @Injectable()
    export class ConfiguracaoJobService extends XService
    {

        static CID = 'A6DF5777-4969-429A-9A0E-EEE068937138';

        static Create(http: HttpClient): ConfiguracaoJobService
        {
            return new ConfiguracaoJobService(http, null);
        }

        constructor(private http: HttpClient, public Rule: STXCoreAutomatedsConfiguracoesConfiguracaoJobRLE.ConfiguracaoJobRule)
        {
            super();
        }


        GetByPK(pRequest: STXCoreAutomatedsConfiguracoesConfiguracaoJobMDL.ConfiguracaoJobRequest, pCallback: XMethod<STXCoreAutomatedsConfiguracoesConfiguracaoJobMDL.ConfiguracaoJobDataSet>)
        {
            var ret = this.http.post(`${environment.apiBaseURI}/STXCore/Automateds/Configuracoes/ConfiguracaoJob/GetByPK`, pRequest);
            ret.subscribe({
                next: (dst) =>
                {
                    let ndst = new STXCoreAutomatedsConfiguracoesConfiguracaoJobMDL.ConfiguracaoJobDataSet(<any>dst);
                    pCallback.apply(ndst, [ndst]);
                }
            });
        }

        New(pCallback: XMethod<STXCoreAutomatedsConfiguracoesConfiguracaoJobMDL.ConfiguracaoJobDataSet>)
        {
            let ndst = new STXCoreAutomatedsConfiguracoesConfiguracaoJobMDL.ConfiguracaoJobDataSet();
            ndst.New();
            pCallback.apply(ndst, [ndst]);
        }

        Save(pDataSet: STXCoreAutomatedsConfiguracoesConfiguracaoJobMDL.ConfiguracaoJobDataSet, pCallback: XMethod<boolean>)
        {
            var ret = this.http.post(`${environment.apiBaseURI}/STXCore/Automateds/Configuracoes/ConfiguracaoJob/Flush`, pDataSet);
            ret.subscribe({
                next: (isok) =>
                {
                    pCallback.apply(isok, [isok]);
                }
            });
        }
    }
}
