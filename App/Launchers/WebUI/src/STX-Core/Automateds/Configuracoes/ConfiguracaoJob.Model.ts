//<auto-generated/>
import { XRule } from '../../material/Component/XComponent';
export namespace STXCoreAutomatedsConfiguracoesConfiguracaoJobMDL
{

    export class ConfiguracaoJobRule extends XRule<ConfiguracaoJobDataSet>
    {
    }

    export class ConfiguracaoJobTuple extends XDataTuple
    {
        constructor(pSource?: any)
        {
            super();
            this.Assign(pSource);
        }

        override GetPKValue(): any { return this.CORxJobConfiguracaoID.Value; }

        CORxJobConfiguracaoID = new XDataField(XFieldState.Empty, () => 'XGuid', () => '', null, null, 'fd1802fb-92ae-4804-bb6a-bd83123f6e97');
        Dados = new XDataField(XFieldState.Empty, () => 'XBinary', () => '', null, null, 'e5bcc832-6fda-4065-9424-031424117bac');
        CORxJobID = new XDataField(XFieldState.Empty, () => 'XGuid', () => '', null, null, '69a10295-2d2f-444f-bf56-218360cf51c0');

    }

    export class ConfiguracaoJobDataSet extends XDataSet<ConfiguracaoJobTuple>
    {
        constructor(pDataSet?: ConfiguracaoJobDataSet)
        {
            super();
            if (pDataSet != null)
                this.Assign(ConfiguracaoJobTuple, pDataSet);
            if (!this.Tuples)
                this.Tuples = new XArray<ConfiguracaoJobTuple>();
            for (var i = 0; i < this.Tuples.length; i++)
            {
                let ttpl = this.Tuples[i];
                let stpl = pDataSet.Tuples[i];
            }
        }

        override New()
        {
            var tpl = new ConfiguracaoJobTuple();
            tpl.CORxJobConfiguracaoID.Value = Guid.NewGuid();
            tpl.State = XTupleState.Added;
            this.Tuples.Add(tpl);
        }
    }

    export class ConfiguracaoJobRequest extends XRequest
    {
        CORxJobConfiguracaoID?: string;
    }
}
