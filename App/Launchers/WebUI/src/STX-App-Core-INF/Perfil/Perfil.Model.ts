//<auto-generated/>
import { STXAppCoreINFPerfilPerfilDireitoMDL } from './PerfilDireito.Model';
import { XRule } from '../../material/Component/XComponent';
export namespace STXAppCoreINFPerfilPerfilMDL
{

    export class PerfilRule extends XRule<PerfilDataSet>
    {
    }

    export class PerfilTuple extends XDataTuple
    {
        constructor(pSource?: any)
        {
            super();
            this.Assign(pSource);
        }

        override GetPKValue(): any { return this.CORxPerfilID.Value; }

        CORxPerfilID = new XDataField(XFieldState.Empty, () => 'XGuid', () => '', null, null, '447ab1f5-dec1-4f96-a901-82bb8cb307a9');
        Nome = new XDataField(XFieldState.Empty, () => 'XString', () => '', null, null, '6cf8edb7-c9a9-4f80-ab36-90888eb58823');
        PerfilDireito: STXAppCoreINFPerfilPerfilDireitoMDL.PerfilDireitoTuple[];

    }

    export class PerfilDataSet extends XDataSet<PerfilTuple>
    {
        constructor(pDataSet?: PerfilDataSet)
        {
            super();
            if (pDataSet != null)
                this.Assign(PerfilTuple, pDataSet);
            if (!this.Tuples)
                this.Tuples = new XArray<PerfilTuple>();
            for (var i = 0; i < this.Tuples.length; i++)
            {
                let ttpl = this.Tuples[i];
                let stpl = pDataSet.Tuples[i];
                if (!X.IsEmpty(stpl.PerfilDireito))
                    ttpl.PerfilDireito = stpl.PerfilDireito.Select(t => new STXAppCoreINFPerfilPerfilDireitoMDL.PerfilDireitoTuple(t));
            }
        }

        override New()
        {
            var tpl = new PerfilTuple();
            tpl.CORxPerfilID.Value = Guid.NewGuid();
            tpl.State = XTupleState.Added;
            this.Tuples.Add(tpl);
        }
    }

    export class PerfilRequest extends XRequest
    {
        CORxPerfilID?: string;
    }

    export class PerfilFilter extends XFilter
    {
        Nome = new XDataField(XFieldState.Empty, () => 'XString', () => '', null, null, 'ccd8bd5c-0252-45a3-8bee-e21343d3171b');
    }
}
