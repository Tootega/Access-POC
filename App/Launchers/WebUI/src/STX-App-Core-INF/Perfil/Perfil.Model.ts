//<auto-generated/>
import { STXAppCoreINFPerfilPerfilDireitoMDL } from './PerfilDireito.Model';
import { XRule } from '../../material/Component/XComponent';
export namespace STXAppCoreINFPerfilPerfilMDL
{

    export class PerfilRule extends XRule<PerfilDataSet>
    {
    }

    export class PerfilTuple extends XDataTuple
    {
        constructor(pSource?: any)
        {
            super();
            this.Assign(pSource);
        }

            override GetPKValue(): any { return this.CORxPerfilID.Value; }

        CORxPerfilID = new XDataField('CORxPerfilID', XFieldState.Empty, () => 'XGuid', () => '');
        Nome = new XDataField('Nome', XFieldState.Empty, () => 'XString', () => '');
        PerfilDireito: STXAppCoreINFPerfilPerfilDireitoMDL.PerfilDireitoTuple[];

    }

    export class PerfilDataSet extends XDataSet<PerfilTuple>
    {
        constructor(pDataSet?: PerfilDataSet)
        {
            super();
            if (pDataSet != null)
                this.Assign(PerfilTuple, pDataSet);
            for (var i = 0; i < this.Tuples.length; i++)
            {
                let ttpl = this.Tuples[i];
                let stpl = pDataSet.Tuples[i];
                if (!X.IsEmpty(stpl.PerfilDireito))
                    ttpl.PerfilDireito = stpl.PerfilDireito.Select(t => new STXAppCoreINFPerfilPerfilDireitoMDL.PerfilDireitoTuple(t));
            }
        }
    }

    export class PerfilRequest extends XRequest
    {
        CORxPerfilID?: string;
    }

    export class PerfilFilter extends XFilter
    {
        Nome = new XDataField('Nome', XFieldState.Empty, () => 'XString', () => '');
    }
}
