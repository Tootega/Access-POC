//<auto-generated/>
import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { environment } from 'src/environments/environment';
import { XService, XRule } from 'material/Component/XComponent';
import { STXAppCoreINFUsuarioUsuarioMDL } from './Usuario.Model';
import { STXAppCoreINFUsuarioUsuarioRLE } from './Usuario.Service.Rule';

export namespace STXAppCoreINFUsuarioUsuarioSVC
{

    @Injectable()
    export class UsuarioService extends XService
    {
        static CID = '3D683BF1-A796-451D-A8F1-33805F091BFC';
        constructor(private http: HttpClient, public Rule: STXAppCoreINFUsuarioUsuarioRLE.UsuarioRule)
        {
            super();
        }


        override DoSearch(pCallback: XMethod<XDataSet<XDataTuple>>)
        {
            let filter = new STXAppCoreINFUsuarioUsuarioMDL.UsuarioFilter();
            this.Search(filter, pCallback);
        }

        Search(pFilter: STXAppCoreINFUsuarioUsuarioMDL.UsuarioFilter, pCallback: XMethod<STXAppCoreINFUsuarioUsuarioMDL.UsuarioDataSet>)
        {
            let ret = this.http.post(`${environment.apiBaseURI}/STXAppCoreINF/Usuario/Usuario/Search`, pFilter);
            ret.subscribe({
                next: (dst) =>
                {
                    let ndst = new STXAppCoreINFUsuarioUsuarioMDL.UsuarioDataSet(<any>dst);
                    pCallback.apply(ndst, [ndst]);
                }
            });
        }

        GetByPK(pRequest: STXAppCoreINFUsuarioUsuarioMDL.UsuarioRequest, pCallback: XMethod<STXAppCoreINFUsuarioUsuarioMDL.UsuarioDataSet>)
        {
            var ret = this.http.post(`${environment.apiBaseURI}/STXAppCoreINF/Usuario/Usuario/GetByPK`, pRequest);
            ret.subscribe({
                next: (dst) =>
                {
                    let ndst = new STXAppCoreINFUsuarioUsuarioMDL.UsuarioDataSet(<any>dst);
                    pCallback.apply(ndst, [ndst]);
                }
            });
        }

        Save(pDataSet: STXAppCoreINFUsuarioUsuarioMDL.UsuarioDataSet, pCallback: XMethod<boolean>)
        {
            var ret = this.http.post(`${environment.apiBaseURI}/STXAppCoreINF/Usuario/Usuario/Flush`, pDataSet);
            ret.subscribe({
                next: (isok) =>
                {
                    pCallback.apply(isok, [isok]);
                }
            });
        }
    }
}
