//<auto-generated/>
using System;
using System.Linq;
using System.Collections.Generic;
using System.Diagnostics;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using STX.Core.Model;
using STX.Core.Interfaces;
using STX.Access;
using STX.Access.Model;
using STX.Core.Services;
using STX.Core.Test.Interfaces;
using STX.App.Core.INF.Usuario;

namespace STX.App.Core.TST.Usuario
{

    public class UsuarioSAMInsercoesTestSAM : XWebScrapTest<UsuarioApp, UsuarioSAMInsercoesTestSVCRule, UsuarioTuple>
    {
        public UsuarioSAMInsercoesTestSAM(XWebScrapSetup pSetup)
            : base(pSetup)
        {
        }

        private UsuarioTuple _Tuple;

        [Theory, ClassData(typeof(UsuarioSAMInsercoesTestSVC.Data))]
        public void Flush(Int32 pIndex, UsuarioTuple pTuple)
        {
            _Tuple = pTuple;
            UsuarioSAMInsercoesTestSVCRule rule = CreateRule();
            XLog.AddLog("In√≠ciando Test de ");
            Setup.Browser.AddLoadEvent(PageLoaded);
            Setup.Browser.GotoAsync("http://localhost:4200");
            rule.BeforeExecute(pIndex, pTuple);
            Setup.Wait();
        }

        private async void PageLoaded()
        {
            await Setup.Browser.CurrentPage.GetById(new Guid("2de8c87d-4e4a-4e57-a567-a6f5acb92e05")).ClickToVisible();
            await Setup.Browser.CurrentPage.GetById(App.MenuID).ClickToVisible();
            await Setup.Browser.CurrentPage.GetById(App.BtnNewID).ClickAsync();
            if (Setup.Browser.CurrentPage.CheckElement("div", new XAtt("id", UsuarioApp.FRMUsuario.ID.AsString())) == true)
            {
                await Setup.Browser.CurrentPage.GetById(UsuarioApp.FRMUsuario.Nome.ID).Focus();
                await Setup.Browser.CurrentPage.HumanTypingAsync(_Tuple.Nome.Value.AsString());
                await Setup.Browser.CurrentPage.GetById(UsuarioApp.FRMUsuario.Login.ID).Focus();
                await Setup.Browser.CurrentPage.HumanTypingAsync(_Tuple.Login.Value.AsString());
                await Setup.Browser.CurrentPage.GetById(UsuarioApp.FRMUsuario.CORxEstadoID.ID).Focus();
                await Setup.Browser.CurrentPage.HumanTypingAsync(_Tuple.CORxEstadoID.Value.AsString());
                await Setup.Browser.CurrentPage.GetById(UsuarioApp.FRMUsuario.CORxPerfilID.ID).Focus();
                await Setup.Browser.CurrentPage.HumanTypingAsync(_Tuple.CORxPerfilID.Value.AsString());


                await Setup.Browser.CurrentPage.ShowTabAsync(UsuarioApp.FRMTab01.ID);
                await Setup.Browser.CurrentPage.GetById(UsuarioApp.FRMTab01.Nome.ID).Focus();
                await Setup.Browser.CurrentPage.HumanTypingAsync(_Tuple.Nome.Value.AsString());
                await Setup.Browser.CurrentPage.GetById(UsuarioApp.FRMTab01.Login.ID).Focus();
                await Setup.Browser.CurrentPage.HumanTypingAsync(_Tuple.Login.Value.AsString());

                await Setup.Browser.CurrentPage.ShowTabAsync(UsuarioApp.FRMTab02.ID);
                await Setup.Browser.CurrentPage.GetById(UsuarioApp.FRMTab02.Login.ID).Focus();
                await Setup.Browser.CurrentPage.HumanTypingAsync(_Tuple.Login.Value.AsString());
                await Setup.Browser.CurrentPage.GetById(UsuarioApp.FRMTab02.Nome.ID).Focus();
                await Setup.Browser.CurrentPage.HumanTypingAsync(_Tuple.Nome.Value.AsString());
            }
            Setup.Continue();
        }
    }
}